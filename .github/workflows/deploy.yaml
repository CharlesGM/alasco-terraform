name: Terraform ECS Deploy

on:
  push:
    paths:
      - 'terraform.tfvars'
      - '**/terraform.tfvars'

  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy resources'
        required: false
        default: 'false'

jobs:
  terraform:
    name: 'Terraform ECS Deployment Workflow'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: 'Check if backend initialized in alasco folder'
      id: alasco_backend_check
      run: |
        if [ -f .terraform-initialized ]; then
          echo "Backend already initialized"
          echo "backend_initialized=true" >> $GITHUB_ENV
        else
          echo "backend_initialized=false" >> $GITHUB_ENV
        fi
      working-directory: ./alasco

    - name: 'Terraform Init in alasco folder'
      run: |
        if [ "$backend_initialized" = "false" ]; then
          terraform init -reconfigure
          touch .terraform-initialized
        else
          terraform init
        fi
      working-directory: ./alasco

    - name: 'Terraform Plan in alasco folder'
      run: terraform plan
      working-directory: ./alasco

    - name: 'Terraform Apply in alasco folder'
      run: terraform apply -auto-approve
      working-directory: ./alasco

    - name: 'Terraform Destroy in alasco folder'
      if: ${{ github.event.inputs.destroy == 'true' }}
      run: terraform destroy -auto-approve
      working-directory: ./alasco