name: Terraform ECS Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy resources'
        required: false
        default: 'false'

jobs:
  terraform:
    name: 'Terraform ECS Deployment Workflow'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Initialize Terraform for the initial backend setup
    - name: 'Terraform Init for initial backend setup'
      run: terraform init -backend=false
      working-directory: ./s3

    - name: 'Terraform Plan for initial backend setup'
      run: terraform plan
      working-directory: ./s3

    - name: 'Terraform Apply for initial backend setup'
      run: terraform apply -auto-approve
      working-directory: ./s3

    # Reinitialize Terraform to use the newly created S3 backend
    - name: 'Reinitialize Terraform with new backend'
      run: terraform init -reconfigure
      working-directory: ./s3

    - name: 'Terraform Plan in s3 folder'
      run: terraform plan
      working-directory: ./s3

    - name: 'Terraform Apply in s3 folder'
      run: terraform apply -auto-approve
      working-directory: ./s3

    - name: 'Terraform Destroy in s3 folder'
      if: ${{ github.event.inputs.destroy == 'true' }}
      run: terraform destroy -auto-approve
      working-directory: ./s3